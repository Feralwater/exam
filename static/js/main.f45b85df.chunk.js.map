{"version":3,"sources":["button/Button.module.css","button/Button.tsx","setValue/SetValue.tsx","redux/counter-reducer.ts","settings/Settings.tsx","App.tsx","redux/store.ts","utils/localstorage-utils.ts","index.tsx","App.module.css","setValue/SetValue.module.css"],"names":["module","exports","Button","children","onClick","disabled","className","s","btn","SetValue","value","onChange","container","text","type","e","currentTarget","initialState","count","MAXIMUM","MINIMUM","settings","disableSet","setCountAC","setSettingsAC","setMinimumSettingsAC","setMaximumSettingsAC","disableSetAC","bool","Settings","useSelector","state","counter","dispatch","useDispatch","counter_container","display","buttons_container","App","red","rootReducer","combineReducers","action","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f45b85df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2zJqt\"};","import React from 'react';\nimport s from \"./Button.module.css\"\n\ntype PropsButtonType = {\n    onClick: () => void\n    disabled: boolean\n}\nconst Button: React.FC<PropsButtonType> = ({children, onClick, disabled}) => {\n    return (\n        <button\n            className={s.btn}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport s from \"./SetValue.module.css\"\n\ntype PropsInputType = {\n    onChange: (value: number) => void\n    value: number\n    className: string\n}\n\nconst SetValue: React.FC<PropsInputType> = (\n    {children, value, onChange, className}\n) => {\n    return (\n        <div className={s.container}>\n            <div className={s.text}>{children}:</div>\n            <input\n                className={s[className]}\n                type=\"number\"\n                value={value}\n                onChange={(e) => onChange(+e.currentTarget.value)}\n            />\n        </div>\n    );\n};\n\nexport default SetValue;","const initialState = {\n    count: 0,\n    MAXIMUM: 1,\n    MINIMUM: 0,\n    settings: false,\n    disableSet: false\n}\n\nexport type InitialStateType = typeof initialState\n\ntype ActionType =\n    IncValuesActionType\n    | SettingsType\n    | MinimumSettingsType\n    | MaximumSettingsType\n    | DisableType\n    | SetCountType\nexport const counterReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\n\n    switch (action.type) {\n        case \"INCREMENT_COUNT\":\n            return {\n                ...state,\n                count: state.count + 1\n            }\n        case \"SET_SETTINGS\":\n            return {\n                ...state,\n                settings: action.settings\n            }\n        case \"MINIMUM_SETTINGS\":\n            return {\n                ...state,\n                MINIMUM: action.MINIMUM\n            }\n        case \"MAXIMUM_SETTINGS\":\n            return {\n                ...state,\n                MAXIMUM: action.MAXIMUM\n            }\n        case \"DISABLE_SETTINGS\":\n            return {\n                ...state,\n                disableSet: action.disableSet\n            }\n        case \"SET_COUNT\":\n            return {\n                ...state,\n                count: action.count\n            }\n        default:\n            return state\n    }\n}\n\nexport type IncValuesActionType = ReturnType<typeof incrementCountAC>\nexport type SettingsType = ReturnType<typeof setSettingsAC>\nexport type MinimumSettingsType = ReturnType<typeof setMinimumSettingsAC>\nexport type MaximumSettingsType = ReturnType<typeof setMaximumSettingsAC>\nexport type DisableType = ReturnType<typeof disableSetAC>\nexport type SetCountType = ReturnType<typeof setCountAC>\n\nexport const incrementCountAC = () => ({type: \"INCREMENT_COUNT\"} as const);\nexport const setCountAC = (count: number) => ({type: \"SET_COUNT\", count} as const);\nexport const setSettingsAC = (settings: boolean) => ({type: \"SET_SETTINGS\", settings} as const);\nexport const setMinimumSettingsAC = (MINIMUM: number) => ({type: \"MINIMUM_SETTINGS\", MINIMUM} as const);\nexport const setMaximumSettingsAC = (MAXIMUM: number) => ({type: \"MAXIMUM_SETTINGS\", MAXIMUM} as const);\nexport const disableSetAC = (bool: boolean) => ({type: \"DISABLE_SETTINGS\", disableSet: bool} as const);","import React from 'react';\nimport s from \"../App.module.css\";\nimport SetValue from \"../setValue/SetValue\";\nimport Button from \"../button/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    disableSetAC,\n    setCountAC,\n    setMaximumSettingsAC,\n    setMinimumSettingsAC,\n    setSettingsAC,\n} from \"../redux/counter-reducer\";\nimport {AppStateType} from \"../redux/store\";\n\nconst Settings: React.VFC = () => {\n\n    const disableSet = useSelector<AppStateType, boolean>(state => state.counter.disableSet);\n    const MAXIMUM = useSelector<AppStateType, number>(state => state.counter.MAXIMUM);\n    const MINIMUM = useSelector<AppStateType, number>(state => state.counter.MINIMUM);\n    const dispatch = useDispatch();\n\n    const setMaxValue = (value: number) => {\n        dispatch(setMaximumSettingsAC(value))\n        dispatch(disableSetAC(false))\n    }\n    const setStartValue = (value: number) => {\n        dispatch(setMinimumSettingsAC(value))\n        dispatch(disableSetAC(false))\n    }\n\n    const setValue = () => {\n        dispatch(setMaximumSettingsAC(MAXIMUM))\n        dispatch(setMinimumSettingsAC(MINIMUM))\n        dispatch(setCountAC(MINIMUM))\n        dispatch(disableSetAC(true))\n        dispatch(setSettingsAC(false));\n    }\n    return (\n        <div className={s.counter_container}>\n            <div className={s.display}>\n                <SetValue onChange={setMaxValue}\n                          value={MAXIMUM}\n                          className={MINIMUM >= MAXIMUM ? \"redInput\" : \"input\"}\n                >max value</SetValue>\n                <SetValue onChange={setStartValue}\n                          value={MINIMUM}\n                          className={MINIMUM >= MAXIMUM ? \"redInput\" : \"input\"}\n                >start value</SetValue>\n            </div>\n            <div className={s.buttons_container}>\n                <Button onClick={setValue}\n                        disabled={disableSet || MINIMUM >= MAXIMUM}\n                >set</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default Settings;","import React from 'react';\nimport s from './App.module.css';\nimport Button from \"./button/Button\";\nimport Settings from \"./settings/Settings\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"./redux/store\";\nimport {incrementCountAC, setCountAC, setSettingsAC} from \"./redux/counter-reducer\";\n\nfunction App() {\n\n    const count = useSelector<AppStateType, number>(state => state.counter.count);\n    const MAXIMUM = useSelector<AppStateType, number>(state => state.counter.MAXIMUM);\n    const MINIMUM = useSelector<AppStateType, number>(state => state.counter.MINIMUM);\n    const settings = useSelector<AppStateType, boolean>(state => state.counter.settings);\n    const dispatch = useDispatch();\n\n    const incrementCount = () => {\n        dispatch(incrementCountAC())\n    }\n    const resetCount = () => {\n   dispatch(setCountAC(MINIMUM))\n    }\n\n    return (\n        <div className={s.App}>\n            {!settings && <div className={s.counter_container}>\n                <div className={s.display}>\n                    <div className={count === MAXIMUM && count > 0 ? s.counter + \" \" + s.red : s.counter}\n                    >{count}\n                    </div>\n                </div>\n                <div className={s.buttons_container}>\n                    <Button onClick={incrementCount}\n                            disabled={count === MAXIMUM}\n                    >inc</Button>\n                    <Button onClick={resetCount}\n                            disabled={count === MINIMUM}\n                    >reset</Button>\n                    <Button onClick={() => dispatch(setSettingsAC(true))} disabled={false}>set</Button>\n                </div>\n            </div>}\n            {settings &&\n            <Settings/>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers, createStore} from \"redux\";\nimport {counterReducer} from \"./counter-reducer\";\nimport {loadState, saveState} from \"../utils/localstorage-utils\";\n\nconst rootReducer = combineReducers({\n    counter: counterReducer\n})\n\nexport type AppStateType = ReturnType<typeof rootReducer>\n\nexport const store = createStore(rootReducer, loadState())\n\nstore.subscribe(() => {\n    saveState({\n        counter: store.getState().counter\n    })\n})","import {AppStateType} from \"../redux/store\";\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nexport const saveState = (state:AppStateType) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch {\n        // ignore write errors\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}><App/></Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"buttons_container\":\"App_buttons_container__1A6Jl\",\"counter_container\":\"App_counter_container__1RiHl\",\"counter\":\"App_counter__o2xHs\",\"red\":\"App_red__ai-vW\",\"display\":\"App_display__QXS6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SetValue_container__132Y3\",\"text\":\"SetValue_text__3OUYE\",\"input\":\"SetValue_input__3Q2_P\",\"redInput\":\"SetValue_redInput__1Zyye\"};"],"sourceRoot":""}